scaler = 'ThermodynamicScaler'

rxn_expressions = [
    #1 Volmer
    'H2O_g + ele_g + *_t <-> H2O-ele*_t -> H*_t + OH_g; beta=0.7',
    #2 Heyrovski
    'H2O_g + ele_g + H*_t <-> H-H2O-ele*_t -> H2_g + *_t + OH_g; beta=0.5',
    #3 Tafel
    'H*_t + H*_t <-> H-H*_t + *_t -> H2_g + 2*_t',

    #CO2 to CO
    #4 CO2 adsorption
    'CO2_g + *_t <-> CO2-*_t -> CO2*_t',
    #5 CO2 to COOH
    'CO2*_t + H2O_g + ele_g <-> CO2-H2O-ele*_t -> COOH*_t + OH_g; beta=0.5',
    #6 COOH to CO
    'COOH*_t + H2O_g + ele_g <-> COOH-H2O-ele*_t -> CO*_t + H2O_g + OH_g; beta=0.5',
    #7 CO desorption
    'CO*_t <-> CO-*_t -> CO_g + *_t',
    #8 COOH to formate
    #'COOH*_t + H2O_g + ele_g <-> HCOOH_g + OH_g',

    #9 CO to CHO (barrierless)
    'CO*_t + H2O_g + ele_g <-> CHO*_t + OH_g',
    #10 rate-limiting for CH4: CHO to CHOH
    'CHO*_t + H2O_g + ele_g <-> CHO-H2O-ele*_t <-> CHOH*_t + OH_g; beta=0.5',
    #11 CHOH to CH4 (barrierless)
    'CHOH*_t + 3H2O_g + 4ele_g <-> CH4_g + *_t + 4OH_g',

    #12 2CO to OCCO (chemical)
    '2CO*_t <-> OC-CO*_t <-> OCCO*_t',
    #13 rate-limiting for EtOH/C2H4: OCCO -> OCCOH
    'OCCO*_t + H2O_g + ele_g <-> OCCO-H2O-ele*_t <-> OCCOH*_t + OH_g; beta=0.5',
    #14 OCCOH to EtOH (or C2H4, same # of electrons) (barrierless)
    'OCCOH*_t + 6H2O_g + 7ele_g <-> CH3CH2OH_g + 2*_t + 7OH_g'
]

prefactor_list = [1e13]*len(rxn_expressions)  #Heine: prefactor for CO is 1e8

surface_names = ['Cu']

descriptor_names= ['voltage', 'temperature'] #descriptor names
descriptor_ranges = [[0,0],[300,300]]
descriptors = [0,300]
resolution = [1, 1]

beta = 0.5

pH = 7.

species_definitions = {}
species_definitions['OH_g'] = {'pressure':1.0}
species_definitions['ele_g'] = {'pressure':1.0, 'composition':{}}
species_definitions['CO_g'] = {'pressure':0.00001}
species_definitions['CO2_g'] = {'pressure':1.0}
species_definitions['CH4_g'] = {'pressure':1.0}
species_definitions['CH3CH2OH_g'] = {'pressure':1.0}
species_definitions['H2_g'] = {'pressure':0.00001}
species_definitions['H2O_g'] = {'pressure':1.0}
species_definitions['t'] = {'site_names': ['211'], 'total':1.0}

data_file = 'catmap.pkl'
input_file = 'catmap_energies.txt' #2_energies.txt'

gas_thermo_mode = 'ideal_gas' 
adsorbate_thermo_mode = 'harmonic_adsorbate'
electrochemical_thermo_mode = 'simple_electrochemical'
potential_reference_scale = 'RHE'
extrapolated_potential = -0.416985308915 #the potential at which the energies were calculated vs. SHE

decimal_precision = 100
tolerance = 1e-25
max_rootfinding_iterations = 200
max_bisections = 3

rxn_mechanisms = { 'HER_Tafel':[1,1,3],
                   'HER_Heyrovsky':[1,2],
                   'CO':[4,5,6,7],
                   'C1':[8,9,10],
                   'C2':[11,12,13]
}


adsorbate_interaction_model = 'first_order' #use "single site" interaction model

interaction_response_function = 'smooth_piecewise_linear' #use "smooth piecewise linear" interactions

interaction_fitting_mode = None
cross_interaction_mode = 'geometric_mean' #use geometric mean for cross parameters

interaction_scaling_constraint_dict = {
                                'CO_t':[0,0,None],
                                'H_t':[0,0,None],
                                'CHO_t':[0,0,None],
                          }

interaction_strength = 1.0

if 1 == len(surface_names):
        numBeforePt = 0
        numAfterPt = 0
else:
        numBeforePt = len(surface_names)-surface_names.index('Pt')
        numAfterPt = len(surface_names)-numBeforePt-1
        transition_state_cross_interaction_mode = 'transition_state_scaling' #use TS scaling for TS interaction

species_definitions['t']['interaction_response_parameters'] = {'cutoff':0.25,'smoothing':0.05}

eHCO=0.7274
eCO=2.4670
eH=0.0

# specify all interactions of CO with itself (self-interaction)
# and the interactions with all other species
# if no interaction is given the interaction of CO with all other species
# is considered via the geometric mean sqrt(CO-self-interaction*species-self-interaction)

species_definitions['CO_t'] = {
                'self_interaction_parameter':[None]*numBeforePt+[eCO]+[None]*numAfterPt,
                'cross_interaction_parameters':
                        {
                        'H_t': [None]*numBeforePt+[eHCO]+[None]*numAfterPt,
                        'H2O-ele_t': [None]*numBeforePt+[eHCO*1.08]+[None]*numAfterPt,
                        'H-H2O-ele_t': [None]*numBeforePt+[eHCO*0.7]+[None]*numAfterPt,
                        'H-H_t': [None]*numBeforePt+[eHCO*1.59]+[None]*numAfterPt,
                        
                        'OC-CO_t': [None]*numBeforePt+[1.*eCO]+[None]*numAfterPt,
                        'OCCO_t': [None]*numBeforePt+[1.*eCO]+[None]*numAfterPt,

                        'OCCO-H2O-ele_t': [None]*numBeforePt+[1.*eCO]+[None]*numAfterPt,
                        'OCCOH_t': [None]*numBeforePt+[0.44*eCO]+[None]*numAfterPt
                        }
                }

#set all remaining species to the same parameters as CO
for species in ['CHOH_t', 'CHO_t','CO2_t','COOH_t','CO2-H2O-ele_t','COOH-H2O-ele_t','CHO-H2O-ele_t']:
        species_definitions[species] = species_definitions['CO_t']

species_definitions['OCCO_t'] = {
        'self_interaction_parameter':[None]*numBeforePt+[1*eCO]+[None]*numAfterPt,
        'n_sites':2
         }

#set all remaining C2 species to the same parameters as OCCO
for sp in ['OCCOH_t','OC-CO_t','OCCO-H2O-ele_t']:
        species_definitions[sp] = species_definitions['OCCO_t']

#no interactions, comment this out
#for sp in ['OCCOH_t','OC-CO_t','OCCO-H2O-ele_t','OCCO_t']:
#        species_definitions[sp] = {'n_sites':2}
