scaler = 'ThermodynamicScaler'

rxn_expressions = [
    #1 Volmer
    'H2O_g + ele_g + *_t <-> H2O-ele*_t -> H*_t + OH_g; beta=0.5',
    #2 Heyrovski
    'H2O_g + ele_g + H*_t <-> H-H2O-ele*_t -> H2_g + *_t + OH_g; beta=0.89',
    #3 Tafel
    'H*_t + H*_t <-> H-H*_t + *_t -> H2_g + 2*_t',
    #H2O chemisorption
    'OH_g + *_t <-> OH_t + ele_g',
    'H2O_g + 2*_t <-> H2O-*_t <-> OH*_t + H*_t',

    #4 CO adsorption
    'CO_g + *_t <-> CO-*_t -> CO*_t',

    #5 CO to CHO (barrierless)
    'CO*_t + H2O_g + ele_g <-> H2O-CO-ele*_t <-> CHO*_t + OH_g; beta=0.7',
#    'CO*_t + H2O_g + ele_g <-> CHO*_t + OH_g',
    #6 CHO to CHOH
    'CHO*_t + H2O_g + ele_g <-> CHO-H2O-ele*_t <-> CHOH*_t + OH_g; beta=0.75',
    # 'CHO*_t + H2O_g + ele_g <-> CHOH*_t + OH_g',
    #7 rate-limiting for CH4: CHO to CHOH
    'CHOH*_t + ele_g <-> CH-OH-ele*_t <-> CH*_t + OH_g; beta=0.5',
    #'CHOH*_t + ele_g <-> CH*_t + OH_g',
    #8 CHOH to CH4 (barrierless)
    'CH*_t + 3H2O_g + 3ele_g <-> CH4_g + *_t + 3OH_g',

    #9 2CO to OCCO (chemical)
    '2CO*_t <-> OC-CO*_t <-> OCCO*_t; beta=0.5',
    #10 rate-limiting for EtOH/C2H4: OCCO -> OCCOH
    'OCCO*_t + H2O_g + ele_g <-> OCCO-H2O-ele*_t <-> OCCOH*_t + OH_g; beta=0.9',
    #11 OCCOH to EtOH (or C2H4, same # of electrons) (barrierless)
    'OCCOH*_t + 6H2O_g + 7ele_g <-> CH3CH2OH_g + 2*_t + 7OH_g',
]

rxn_expressions_names=[str(i) for i in range(len(rxn_expressions))]

rxn_mechanisms = { 'HER_Tafel':[1,1,3],
                   'HER_Heyrovsky':[1,2],
                   'C1':[4,5,6,7,8],
                   'C2':[4,4,9,10,11]
#                   'formate':[4,5,8],
#                   'C1':[4,5,6,9,10,11],
#                   'C2':[4,4,5,5,6,6,12,13,14]
}

prefactor_list = [1e13]*len(rxn_expressions)  #Heine: prefactor for CO is 1e8

surface_names = ['Cu']

descriptor_names= ['voltage', 'temperature'] #descriptor names
descriptor_ranges = [[0,0],[300,300]]
descriptors = [1,300]
resolution = [1, 1]

beta = 0.5

pH = 7.

species_definitions = {}
#educts
species_definitions['OH_g'] = {'pressure':1.0}
species_definitions['ele_g'] = {'pressure':1.0, 'composition':{}}
species_definitions['H2O_g'] = {'pressure':1.0}
#products
species_definitions['CO_g'] = {'pressure':0.00001}
species_definitions['CH4_g'] = {'pressure':0.0}
#species_definitions['HCOOH_g'] = {'pressure':0.0}
species_definitions['CH3CH2OH_g'] = {'pressure':0.0}
species_definitions['H2_g'] = {'pressure':0.0}
#surface
species_definitions['t'] = {'site_names': ['211'], 'total':1.0}

data_file = 'catmap.pkl'
input_file = 'catmap_CO2R_energies.txt' #2_energies.txt'

gas_thermo_mode = 'ideal_gas' 
adsorbate_thermo_mode = 'harmonic_adsorbate'
electrochemical_thermo_mode = 'simple_electrochemical'
potential_reference_scale = 'SHE'
extrapolated_potential = -0.416985308915 #the potential at which the energies were calculated vs. SHE
voltage_diff_drop = 0.0
bulk_ph = 7

decimal_precision = 100
tolerance = 1e-25
max_rootfinding_iterations = 200
max_bisections = 3


#max_coverage does not work here, because it makes no physical sense
#species_definitions['CO_t'] = {'max_coverage':0.5}
#for sp in ['COOH_t','CHO_t','OCCO_t','OCCOH_t','COOH-H2O-ele_t','OCCO-H2O-ele_t','CHO-H2O-ele_t']:
#    species_definitions[sp] = {'max_coverage':0.5}

adsorbate_interaction_model = 'first_order' #use "single site" interaction model

interaction_response_function = 'smooth_piecewise_linear' #use "smooth piecewise linear" interactions

interaction_fitting_mode = None

cross_interaction_mode = 'geometric_mean' #use geometric mean for cross parameters

interaction_scaling_constraint_dict = {
                                'CO_t':[0,0,None],
                                'H_t':[0,0,None],
                                'CHO_t':[0,0,None],
                          }

interaction_strength = 1

species_definitions['t']['interaction_response_parameters'] = {'cutoff':0.25,'smoothing':0.05}

eHCO=0.7274

eCO=2.4670

eH=0.0

# specify all interactions of CO with itself (self-interaction)

# and the interactions with all other species

# if no interaction is given the interaction of CO with all other species

# is considered via the geometric mean sqrt(CO-self-interaction*species-self-interaction)

species_definitions['CO_t'] = {
                'self_interaction_parameter':[eCO],
                'cross_interaction_parameters':
                        {
                        'H_t': [eHCO],
                        'H2O-ele_t': [eHCO*1.08],
                        'H-H2O-ele_t': [eHCO*0.7],
                        'H-H_t': [eHCO*1.59],
                        #'CH-OH-ele_t':[eCO*1.],
                        'CHO-H2O-ele_t':[eCO*1.],
                        'OC-CO_t': [1.*eCO],
                        'OCCO_t': [1.*eCO],
                        'OCCO-H2O-ele_t': [1.1*eCO],
                        'OCCOH_t': [0.44*eCO],
                        'CO-_t':[1.*eCO],
                        }
                }

#set all remaining species to the same parameters as CO

#for species in ['CHOH_t', 'CHO_t','CH-OH-ele_t','CH_t','H2O-CO-ele_t']: 
#for species in ['CHOH_t', 'CHO_t','CH_t','H2O-CO-ele_t','CHO-H2O-ele_t']: 
for species in ['CHOH_t', 'CHO_t','CH_t','H2O-CO-ele_t','CHO-H2O-ele_t','CH-OH-ele_t']: 
        species_definitions[species] = species_definitions['CO_t']

species_definitions['OCCO_t'] = {
        'self_interaction_parameter':[1*eCO],
        'n_sites':2
         }

species_definitions['H2O-_t']={
        'n_sites':2
        }

#set all remaining C2 species to the same parameters as OCCO

for sp in ['OCCOH_t','OC-CO_t','OCCO-H2O-ele_t']:
        species_definitions[sp] = species_definitions['OCCO_t']

#for sp in ['OCCOH_t','OC-CO_t','OCCO-H2O-ele_t','OCCO_t']:
#        species_definitions[sp]={
#                'n_sites':2
#        }
